{"ast":null,"code":"var _jsxFileName = \"/Users/khushiverma/Desktop/chat-app/Chat App/client/src/modules/Dashboard/index.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useRef, useState } from 'react';\nimport Img1 from '../../assets/img1.jpg';\nimport tutorialsdev from '../../assets/tutorialsdev.png';\nimport Input from '../../components/Input';\nimport { io } from 'socket.io-client';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Dashboard = () => {\n  _s();\n  const [user] = useState(JSON.parse(localStorage.getItem('user:detail')));\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const messageRef = useRef(null);\n  useEffect(() => {\n    setSocket(io('http://localhost:8080'));\n  }, []);\n  useEffect(() => {\n    socket === null || socket === void 0 ? void 0 : socket.emit('addUser', user === null || user === void 0 ? void 0 : user.id);\n    socket === null || socket === void 0 ? void 0 : socket.on('getUsers', activeUsers => {\n      console.log('activeUsers :>> ', activeUsers);\n    });\n    socket === null || socket === void 0 ? void 0 : socket.on('getMessage', data => {\n      setMessages(prev => ({\n        ...prev,\n        messages: [...prev.messages, {\n          user: data.user,\n          message: data.message\n        }]\n      }));\n    });\n  }, [socket, user === null || user === void 0 ? void 0 : user.id]);\n  useEffect(() => {\n    var _messageRef$current;\n    messageRef === null || messageRef === void 0 ? void 0 : (_messageRef$current = messageRef.current) === null || _messageRef$current === void 0 ? void 0 : _messageRef$current.scrollIntoView({\n      behavior: 'smooth'\n    });\n  }, [messages === null || messages === void 0 ? void 0 : messages.messages]);\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('user:detail'));\n    const fetchConversations = async () => {\n      const res = await fetch(`http://localhost:10000/api/conversations/${loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await res.json();\n      setConversations(resData);\n    };\n    fetchConversations();\n  }, []);\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const res = await fetch(`http://localhost:10000/api/users/${user === null || user === void 0 ? void 0 : user.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      const resData = await res.json();\n      setUsers(resData);\n    };\n    fetchUsers();\n  }, [user]);\n  const fetchMessages = async (conversationId, receiver) => {\n    const res = await fetch(`http://localhost:10000/api/message/${conversationId}?senderId=${user === null || user === void 0 ? void 0 : user.id}&&receiverId=${receiver === null || receiver === void 0 ? void 0 : receiver.receiverId}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const resData = await res.json();\n    setMessages({\n      messages: resData,\n      receiver,\n      conversationId\n    });\n  };\n  const sendMessage = async () => {\n    var _messages$receiver, _messages$receiver2;\n    setMessage('');\n    socket === null || socket === void 0 ? void 0 : socket.emit('sendMessage', {\n      senderId: user === null || user === void 0 ? void 0 : user.id,\n      receiverId: messages === null || messages === void 0 ? void 0 : (_messages$receiver = messages.receiver) === null || _messages$receiver === void 0 ? void 0 : _messages$receiver.receiverId,\n      message,\n      conversationId: messages === null || messages === void 0 ? void 0 : messages.conversationId\n    });\n    const res = await fetch(`http://localhost:10000/api/message`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify({\n        conversationId: messages === null || messages === void 0 ? void 0 : messages.conversationId,\n        senderId: user === null || user === void 0 ? void 0 : user.id,\n        message,\n        receiverId: messages === null || messages === void 0 ? void 0 : (_messages$receiver2 = messages.receiver) === null || _messages$receiver2 === void 0 ? void 0 : _messages$receiver2.receiverId\n      })\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-screen flex\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(Dashboard, \"suJO+RSIjx2BPbF3022qoClAFgM=\");\n_c = Dashboard;\nexport default Dashboard;\nvar _c;\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"names":["useEffect","useRef","useState","Img1","tutorialsdev","Input","io","jsxDEV","_jsxDEV","Dashboard","_s","user","JSON","parse","localStorage","getItem","conversations","setConversations","messages","setMessages","message","setMessage","users","setUsers","socket","setSocket","messageRef","emit","id","on","activeUsers","console","log","data","prev","_messageRef$current","current","scrollIntoView","behavior","loggedInUser","fetchConversations","res","fetch","method","headers","resData","json","fetchUsers","fetchMessages","conversationId","receiver","receiverId","sendMessage","_messages$receiver","_messages$receiver2","senderId","body","stringify","className","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/khushiverma/Desktop/chat-app/Chat App/client/src/modules/Dashboard/index.js"],"sourcesContent":["import { useEffect, useRef, useState } from 'react';\nimport Img1 from '../../assets/img1.jpg';\nimport tutorialsdev from '../../assets/tutorialsdev.png';\nimport Input from '../../components/Input';\nimport { io } from 'socket.io-client';\n\nconst Dashboard = () => {\n  const [user] = useState(JSON.parse(localStorage.getItem('user:detail')));\n  const [conversations, setConversations] = useState([]);\n  const [messages, setMessages] = useState({});\n  const [message, setMessage] = useState('');\n  const [users, setUsers] = useState([]);\n  const [socket, setSocket] = useState(null);\n  const messageRef = useRef(null);\n\n  useEffect(() => {\n    setSocket(io('http://localhost:8080'));\n  }, []);\n\n  useEffect(() => {\n    socket?.emit('addUser', user?.id);\n    socket?.on('getUsers', (activeUsers) => {\n      console.log('activeUsers :>> ', activeUsers);\n    });\n    socket?.on('getMessage', (data) => {\n      setMessages((prev) => ({\n        ...prev,\n        messages: [...prev.messages, { user: data.user, message: data.message }],\n      }));\n    });\n  }, [socket, user?.id]);\n\n  useEffect(() => {\n    messageRef?.current?.scrollIntoView({ behavior: 'smooth' });\n  }, [messages?.messages]);\n\n  useEffect(() => {\n    const loggedInUser = JSON.parse(localStorage.getItem('user:detail'));\n    const fetchConversations = async () => {\n      const res = await fetch(`http://localhost:10000/api/conversations/${loggedInUser?.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const resData = await res.json();\n      setConversations(resData);\n    };\n    fetchConversations();\n  }, []);\n\n  useEffect(() => {\n    const fetchUsers = async () => {\n      const res = await fetch(`http://localhost:10000/api/users/${user?.id}`, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      });\n      const resData = await res.json();\n      setUsers(resData);\n    };\n    fetchUsers();\n  }, [user]);\n\n  const fetchMessages = async (conversationId, receiver) => {\n    const res = await fetch(\n      `http://localhost:10000/api/message/${conversationId}?senderId=${user?.id}&&receiverId=${receiver?.receiverId}`,\n      {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n      }\n    );\n    const resData = await res.json();\n    setMessages({ messages: resData, receiver, conversationId });\n  };\n\n  const sendMessage = async () => {\n    setMessage('');\n    socket?.emit('sendMessage', {\n      senderId: user?.id,\n      receiverId: messages?.receiver?.receiverId,\n      message,\n      conversationId: messages?.conversationId,\n    });\n    const res = await fetch(`http://localhost:10000/api/message`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({\n        conversationId: messages?.conversationId,\n        senderId: user?.id,\n        message,\n        receiverId: messages?.receiver?.receiverId,\n      }),\n    });\n  };\n\n  return (\n    <div className='w-screen flex'>\n      {/* ... (rest of your component remains unchanged) */}\n    </div>\n  );\n};\n\nexport default Dashboard;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}